generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model wvp_device {
  id                                  BigInt   @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  device_id                           String   @unique(map: "uk_device_device") @db.VarChar(50)
  name                                String?  @db.VarChar(255)
  manufacturer                        String?  @db.VarChar(255)
  model                               String?  @db.VarChar(255)
  firmware                            String?  @db.VarChar(255)
  transport                           String?  @db.VarChar(50)
  stream_mode                         String?  @db.VarChar(50)
  on_line                             Boolean? @default(false)
  register_time                       String?  @db.VarChar(50)
  keepalive_time                      String?  @db.VarChar(50)
  ip                                  String?  @db.VarChar(50)
  create_time                         String?  @db.VarChar(50)
  update_time                         String?  @db.VarChar(50)
  port                                Int?
  expires                             Int?
  subscribe_cycle_for_catalog         Int?     @default(0)
  subscribe_cycle_for_mobile_position Int?     @default(0)
  mobile_position_submission_interval Int?     @default(5)
  subscribe_cycle_for_alarm           Int?     @default(0)
  host_address                        String?  @db.VarChar(50)
  charset                             String?  @db.VarChar(50)
  ssrc_check                          Boolean? @default(false)
  geo_coord_sys                       String?  @db.VarChar(50)
  tree_type                           String?  @db.VarChar(50)
  media_server_id                     String?  @db.VarChar(50)
  custom_name                         String?  @db.VarChar(255)
  sdp_ip                              String?  @db.VarChar(50)
  local_ip                            String?  @db.VarChar(50)
  password                            String?  @db.VarChar(255)
  as_message_channel                  Boolean? @default(false)
  keepalive_interval_time             Int?
}

model wvp_device_alarm {
  id                BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  device_id         String  @db.VarChar(50)
  channel_id        String  @db.VarChar(50)
  alarm_priority    String? @db.VarChar(50)
  alarm_method      String? @db.VarChar(50)
  alarm_time        String? @db.VarChar(50)
  alarm_description String? @db.VarChar(255)
  longitude         Float?
  latitude          Float?
  alarm_type        String? @db.VarChar(50)
  create_time       String  @db.VarChar(50)
}

model wvp_device_channel {
  id                BigInt   @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  channel_id        String   @db.VarChar(50)
  name              String?  @db.VarChar(255)
  manufacture       String?  @db.VarChar(50)
  model             String?  @db.VarChar(50)
  owner             String?  @db.VarChar(50)
  civil_code        String?  @db.VarChar(50)
  block             String?  @db.VarChar(50)
  address           String?  @db.VarChar(50)
  parent_id         String?  @db.VarChar(50)
  safety_way        Int?
  register_way      Int?
  cert_num          String?  @db.VarChar(50)
  certifiable       Int?
  err_code          Int?
  end_time          String?  @db.VarChar(50)
  secrecy           String?  @db.VarChar(50)
  ip_address        String?  @db.VarChar(50)
  port              Int?
  password          String?  @db.VarChar(255)
  ptz_type          Int?
  status            Boolean? @default(false)
  longitude         Float?
  latitude          Float?
  stream_id         String?  @db.VarChar(50)
  device_id         String   @db.VarChar(50)
  parental          String?  @db.VarChar(50)
  has_audio         Boolean? @default(false)
  create_time       String   @db.VarChar(50)
  update_time       String   @db.VarChar(50)
  sub_count         Int?
  longitude_gcj02   Float?
  latitude_gcj02    Float?
  longitude_wgs84   Float?
  latitude_wgs84    Float?
  business_group_id String?  @db.VarChar(50)
  gps_time          String?  @db.VarChar(50)

  @@unique([device_id, channel_id], map: "uk_wvp_device_channel_unique_device_channel")
}

model wvp_device_mobile_position {
  id              BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  device_id       String  @db.VarChar(50)
  channel_id      String  @db.VarChar(50)
  device_name     String? @db.VarChar(255)
  time            String? @db.VarChar(50)
  longitude       Float?
  latitude        Float?
  altitude        Float?
  speed           Float?
  direction       Float?
  report_source   String? @db.VarChar(50)
  longitude_gcj02 Float?
  latitude_gcj02  Float?
  longitude_wgs84 Float?
  latitude_wgs84  Float?
  create_time     String? @db.VarChar(50)
}

model wvp_gb_stream {
  gb_stream_id    BigInt  @id @unique(map: "gb_stream_id") @default(autoincrement()) @db.UnsignedBigInt
  app             String  @db.VarChar(255)
  stream          String  @db.VarChar(255)
  gb_id           String  @unique(map: "uk_gb_stream_unique_gb_id") @db.VarChar(50)
  name            String? @db.VarChar(255)
  longitude       Float?
  latitude        Float?
  stream_type     String? @db.VarChar(50)
  media_server_id String? @db.VarChar(50)
  create_time     String? @db.VarChar(50)

  @@unique([app, stream], map: "uk_gb_stream_unique_app_stream")
}

model wvp_log {
  id          BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  name        String? @db.VarChar(50)
  type        String? @db.VarChar(50)
  uri         String? @db.VarChar(200)
  address     String? @db.VarChar(50)
  result      String? @db.VarChar(50)
  timing      BigInt?
  username    String? @db.VarChar(50)
  create_time String? @db.VarChar(50)
}

model wvp_media_server {
  id                  String   @id @db.VarChar(255)
  ip                  String?  @db.VarChar(50)
  hook_ip             String?  @db.VarChar(50)
  sdp_ip              String?  @db.VarChar(50)
  stream_ip           String?  @db.VarChar(50)
  http_port           Int?
  http_ssl_port       Int?
  rtmp_port           Int?
  rtmp_ssl_port       Int?
  rtp_proxy_port      Int?
  rtsp_port           Int?
  rtsp_ssl_port       Int?
  auto_config         Boolean? @default(false)
  secret              String?  @db.VarChar(50)
  rtp_enable          Boolean? @default(false)
  rtp_port_range      String?  @db.VarChar(50)
  record_assist_port  Int?
  default_server      Boolean? @default(false)
  create_time         String?  @db.VarChar(50)
  update_time         String?  @db.VarChar(50)
  hook_alive_interval Int?

  @@unique([ip, http_port], map: "uk_media_server_unique_ip_http_port")
}

model wvp_platform {
  id                      BigInt   @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  enable                  Boolean? @default(false)
  name                    String?  @db.VarChar(255)
  server_gb_id            String?  @unique(map: "uk_platform_unique_server_gb_id") @db.VarChar(50)
  server_gb_domain        String?  @db.VarChar(50)
  server_ip               String?  @db.VarChar(50)
  server_port             Int?
  device_gb_id            String?  @db.VarChar(50)
  device_ip               String?  @db.VarChar(50)
  device_port             String?  @db.VarChar(50)
  username                String?  @db.VarChar(255)
  password                String?  @db.VarChar(50)
  expires                 String?  @db.VarChar(50)
  keep_timeout            String?  @db.VarChar(50)
  transport               String?  @db.VarChar(50)
  character_set           String?  @db.VarChar(50)
  catalog_id              String?  @db.VarChar(50)
  ptz                     Boolean? @default(false)
  rtcp                    Boolean? @default(false)
  status                  Boolean? @default(false)
  start_offline_push      Boolean? @default(false)
  administrative_division String?  @db.VarChar(50)
  catalog_group           Int?
  create_time             String?  @db.VarChar(50)
  update_time             String?  @db.VarChar(50)
  tree_type               String?  @db.VarChar(50)
  as_message_channel      Boolean? @default(false)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model wvp_platform_catalog {
  id                String? @db.VarChar(50)
  platform_id       String? @db.VarChar(50)
  name              String? @db.VarChar(255)
  parent_id         String? @db.VarChar(50)
  civil_code        String? @db.VarChar(50)
  business_group_id String? @db.VarChar(50)

  @@unique([id, platform_id], map: "uk_platform_catalog_id_platform_id")
  @@ignore
}

model wvp_platform_gb_channel {
  id                BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  platform_id       String? @db.VarChar(50)
  catalog_id        String? @db.VarChar(50)
  device_channel_id Int?

  @@unique([platform_id, catalog_id, device_channel_id], map: "uk_platform_gb_channel_platform_id_catalog_id_device_channel_id")
}

model wvp_platform_gb_stream {
  id           BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  platform_id  String? @db.VarChar(50)
  catalog_id   String? @db.VarChar(50)
  gb_stream_id Int?

  @@unique([platform_id, catalog_id, gb_stream_id], map: "uk_platform_gb_stream_platform_id_catalog_id_gb_stream_id")
}

model wvp_stream_proxy {
  id                         BigInt   @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  type                       String?  @db.VarChar(50)
  app                        String?  @db.VarChar(255)
  stream                     String?  @db.VarChar(255)
  url                        String?  @db.VarChar(255)
  src_url                    String?  @db.VarChar(255)
  dst_url                    String?  @db.VarChar(255)
  timeout_ms                 Int?
  ffmpeg_cmd_key             String?  @db.VarChar(255)
  rtp_type                   String?  @db.VarChar(50)
  media_server_id            String?  @db.VarChar(50)
  enable_audio               Boolean? @default(false)
  enable_mp4                 Boolean? @default(false)
  enable                     Boolean? @default(false)
  status                     Boolean?
  enable_remove_none_reader  Boolean? @default(false)
  create_time                String?  @db.VarChar(50)
  name                       String?  @db.VarChar(255)
  update_time                String?  @db.VarChar(50)
  enable_disable_none_reader Boolean? @default(false)

  @@unique([app, stream], map: "uk_stream_proxy_app_stream")
}

model wvp_stream_push {
  id                 BigInt   @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  app                String?  @db.VarChar(255)
  stream             String?  @db.VarChar(255)
  total_reader_count String?  @db.VarChar(50)
  origin_type        Int?
  origin_type_str    String?  @db.VarChar(50)
  create_time        String?  @db.VarChar(50)
  alive_second       Int?
  media_server_id    String?  @db.VarChar(50)
  push_time          String?  @db.VarChar(50)
  status             Boolean? @default(false)
  update_time        String?  @db.VarChar(50)
  push_ing           Boolean? @default(false)
  self               Boolean? @default(false)

  @@unique([app, stream], map: "uk_stream_push_app_stream")
}

model wvp_user {
  id          BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  username    String? @unique(map: "uk_user_username") @db.VarChar(255)
  password    String? @db.VarChar(255)
  role_id     Int?
  create_time String? @db.VarChar(50)
  update_time String? @db.VarChar(50)
  push_key    String? @db.VarChar(50)
}

model wvp_user_role {
  id          BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  name        String? @db.VarChar(50)
  authority   String? @db.VarChar(50)
  create_time String? @db.VarChar(50)
  update_time String? @db.VarChar(50)
}
